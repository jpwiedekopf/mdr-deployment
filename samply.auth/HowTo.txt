Run Samply.auth under Docker
----------------------------

This little package allows you to run a local installation of the
Samply.auth authorization package under Docker.

In addition to Samply.auth, it also contains the database that
Samply.auth uses to store information about users, etc., plus
an Apache server for testing purposes.

Pre-requisite: you need to have Docker installed on your machine.
This package should work on Windows, Linux and Mac. You will also
need some kind of terminal emulator with a command line environment,
e.g. bash or PowerShell.

Starting and stopping the servers
---------------------------------

You should first build the local Docker images:

  docker-compose build --no-cache

Assuming the build is fine, you can then run it:

  docker-compose up

This will start up 3 servers, each in its own Docker container. They
will run in the foreground.

To stop, do a ^C in the terminal emulator and then type:

  docker-compose down

Samply.auth admin
-----------------

You can access the Samply.auth admin console from the browser under
"http://localhost:8080/admin". Login name is "admin", password "admin".

Setting up the test client
--------------------------

One of the Docker containers that you started with docker-compose
was an Apache server, with the "mod_oidc" plugin installed, which allows
it to host protected web pages. Two web pages come preconfigured,
one which is viewable by everybody, and one that can only be viewed
by users with the correct authorization.

To use the test client, the following 3 conditions need to be fulfilled.

1. Create Fake-URLs.
In order to simulate the situation where each component has its own URL,
you need to add the following lines to the "hosts" file on your local
machine:

127.0.0.1       samplyauth-bk.site.de
127.0.0.1       testclt-bk.site.de

Under Windows, you will find this file here:

  C:\Windows\System32\drivers\etc\hosts

Under Linux, look in:

  /etc/hosts.

You will also need to flush the DNS-cache if you are using Linux.

By making these changes, you ensure that the two web pages get redirected
to 'localhost'. In the docker-compose.yml file, the relevant containers
are renamed, so that these names are also used internal to the Docker
network. This means that the servers are known by the same names both
inside the Docker network and outside of it. That's the trick needed
to make callbacks work, which are important for authentication.

2. Docker Client-Proxy
Docker should not use a client proxy. Edit the file  ~/.docker/config.json.
If it contains a "proxies" section, remove it and then save.

3. Don't use an institutional network
Networks in institutions (and companies) tend to use proxies, and these
will not work with our configuration. Once the Docker images have been
built, you should either disconnect from the network completely, or
connect to one that doesn't use a proxy, such as Eduroam.

Using the test client
---------------------

Once you have everything running, you can access the test server in
your browser via the URL:

  http://testclt-bk.site.de:90/test-client

If you click on the link on that page, you should get an error, because
the link leads to a protected page, and you have not set up the
protection yet.

To set up the protection, go to the Samply.auth admin page. Create a
new client with the following attributes:

Client Name: test-client
Client Description: test-client
Redirect URLs: http://testclt-bk.site.de:90/test-client/demo
Client ID: test-client
Client Secret: Let Samply.auth generate this
Trusted: yes (tick)
Allow Basic Authentication: yes (tick)

Make a note of the secret, and click "Submit".

You also need to create a user. Click on "Configure" and select
"Users". Create a new user. You will need to fill in at least the
email and password slots. When you are ready, click "Submit".
In the "Actions" column, click the down-arrow icon and select
"verify email". Click the arrow again, and click "Enable user".

You can now log out of Samply.auth.

Edit the file "docker-compose.yml", search for "CLIENT_SECRET" and
replace the value you find there with the one that was generated by
Samply.auth. Now restart the servers.

If you return to the test server web page and click on the link,
you should now be brought to the Samply.auth login page. Log in
with the credentials for the user you just created. You should
then be taken to the protected web page on the test server.

